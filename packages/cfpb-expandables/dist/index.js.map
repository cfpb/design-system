{
  "version": 3,
  "sources": ["../../../packages/cfpb-atomic-component/src/utilities/standard-type.js", "../../../packages/cfpb-atomic-component/src/mixins/EventObserver.js", "../../../packages/cfpb-atomic-component/src/utilities/data-hook.js", "../../../packages/cfpb-atomic-component/src/utilities/atomic-helpers.js", "../../../packages/cfpb-atomic-component/src/utilities/behavior/behavior.js", "../../../packages/cfpb-atomic-component/src/utilities/type-checkers.js", "../../../packages/cfpb-atomic-component/src/utilities/behavior/FlyoutMenu.js", "../../../packages/cfpb-atomic-component/src/utilities/transition/AlphaTransition.js", "../../../packages/cfpb-atomic-component/src/utilities/transition/BaseTransition.js", "../../../packages/cfpb-atomic-component/src/utilities/transition/MaxHeightTransition.js", "../../../packages/cfpb-atomic-component/src/utilities/transition/MoveTransition.js", "../../../packages/cfpb-expandables/src/Expandable.js", "../../../packages/cfpb-expandables/src/ExpandableGroup.js", "../../../packages/cfpb-core/src/vars-breakpoints.js", "../../../packages/cfpb-core/src/breakpoint-state.js", "../../../packages/cfpb-expandables/src/Summary.js", "../../../packages/cfpb-expandables/src/SummaryMinimal.js"],
  "sourcesContent": ["/**\n * @constant\n * @type {string}\n * @description\n * Constant for the name of the data-* attribute set on\n * HTML DOM elements for access by JavaScript.\n */\nconst JS_HOOK = 'data-js-hook';\n\n/**\n * @constant\n * @type {string}\n * @description\n * Flag prefix for settings that describe what JavaScript\n * behaviors should be attached to a component.\n * This would be set in the markup and initialized when\n * the JavaScript loads.\n * @example\n * A component may flag that it has certain JavaScript behaviors attached,\n * such as:\n * `data-js-hook=\"behavior_flyout-menu behavior_clearable-input\"`,\n * which defines that two scripts (FlyoutMenu) and (ClearableInput)\n * should access this DOM element and initialize its behaviors.\n */\nconst BEHAVIOR_PREFIX = 'behavior_';\n\n/**\n * @constant\n * @type {string}\n * @description\n * Flag prefix for settings related to changes in a components\n * state set in the data-* JavaScript hook.\n * @example\n * A component may flag that it has been initialized by setting\n * `data-js-hook=\"state_atomic_init\"` after page load.\n * Which specifies that the init method of a atomic constructor\n * has been called, such as\n * `var globalSearch = new GlobalSearch( 'm-global-search' ).init()`.\n */\nconst STATE_PREFIX = 'state_';\n\nexport { JS_HOOK, BEHAVIOR_PREFIX, STATE_PREFIX };\n", "/**\n * EventObserver\n * @class\n * @classdesc Used to create an object\n *   that can dispatch and listen to custom events.\n * @returns {object} An EventObserver instance.\n */\nfunction EventObserver() {\n  // The events registered on this instance.\n  const _events = {};\n\n  /**\n   * Register an event listener.\n   * @param {string} event - The event name to listen for.\n   * @param {Function} callback - The function called when the event has fired.\n   * @returns {object} The instance this EventObserver instance is decorating.\n   */\n  function addEventListener(event, callback) {\n    if ({}.hasOwnProperty.call(_events, event)) {\n      _events[event].push(callback);\n    } else {\n      _events[event] = [callback];\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove an added event listener.\n   * Must match a call made to addEventListener.\n   * @param {string} event - The event name to remove.\n   * @param {Function} callback - The function attached to the event.\n   * @returns {object} The instance this EventObserver instance is decorating.\n   */\n  function removeEventListener(event, callback) {\n    if (!{}.hasOwnProperty.call(_events, event)) {\n      return this;\n    }\n\n    const index = _events[event].indexOf(callback);\n    // Check if there are any callbacks associated with a particular event.\n    if (index !== -1) {\n      _events[event].splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Broadcast an event.\n   * @param {string} event - The type of event to broadcast.\n   * @param {object} options - The event object to pass to the event handler.\n   * @returns {object} The instance this EventObserver instance is decorating.\n   */\n  function dispatchEvent(event, options) {\n    if (!{}.hasOwnProperty.call(_events, event)) {\n      return this;\n    }\n\n    options = options || {};\n\n    const evts = _events[event];\n    for (let i = 0, len = evts.length; i < len; i++) {\n      evts[i].call(this, options);\n    }\n\n    return this;\n  }\n\n  this.addEventListener = addEventListener;\n  this.removeEventListener = removeEventListener;\n  this.dispatchEvent = dispatchEvent;\n  this.getRegisteredEvents = () => _events;\n\n  return this;\n}\n\nexport { EventObserver };\n", "import { JS_HOOK } from './standard-type.js';\n\n/**\n * @param {HTMLElement} element - DOM element.\n * @param {string} value - Value to check as existing as a JS data-* hook value.\n * @returns {boolean} True if the data-* hook value exists, false otherwise.\n */\nfunction contains(element, value) {\n  if (!element) {\n    return false;\n  }\n  let values = element.getAttribute(JS_HOOK);\n  // If JS data-* hook is not set return immediately.\n  if (!values) {\n    return false;\n  }\n  values = values.split(' ');\n\n  return values.indexOf(value) > -1 ? true : false;\n}\n\n/**\n * @param {HTMLElement} element - DOM element.\n * @param {string} value - Value to add to the element's JS data-* hook.\n * @returns {string} The value that was added.\n * @throws {Error} If supplied value contains a space,\n *   meaning it would be two values, which is likely a typo.\n */\nfunction add(element, value) {\n  if (contains(element, value)) return value;\n\n  if (value.indexOf(' ') !== -1) {\n    const msg = JS_HOOK + ' values cannot contain spaces!';\n    throw new Error(msg);\n  }\n\n  const values = element.getAttribute(JS_HOOK);\n  if (values !== null) {\n    value = values + ' ' + value;\n  }\n  element.setAttribute(JS_HOOK, value);\n\n  return value;\n}\n\nexport { add, contains };\n", "/* ==========================================================================\n   Atomic Helpers.\n   Utilities for helping validate atomic design element architecture.\n   In descending order of scope, atomic components are:\n   - Page\n   - Template\n   - Organism\n   - Molecule\n   - Atom\n   ========================================================================= */\n\nimport { add, contains } from './data-hook.js';\nimport { STATE_PREFIX } from './standard-type.js';\n\n/**\n * @constant\n * @type {string}\n * @description\n * Flag that gets set on an atomic component after its .init()\n * method has been called. This is used so that an atomic\n * component won't get initialized a second time after it\n * has already been initialized.\n */\nconst INIT_FLAG = STATE_PREFIX + 'atomic_init';\n\n/**\n * @param {HTMLElement} element - The DOM element within which to search for\n *   the atomic element class.\n * @param {string} baseClass - The CSS class name for the atomic element.\n * @returns {HTMLElement} The DOM element for the atomic element.\n * @throws {Error} If DOM element passed into the atomic element is not valid.\n */\nfunction _verifyElementExists(element, baseClass) {\n  if (!element || !element.classList) {\n    const msg =\n      element +\n      ' is not valid. ' +\n      'Check that element is a DOM node with class \"' +\n      baseClass +\n      '\"';\n    throw new Error(msg);\n  }\n\n  return element;\n}\n\n/**\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the atomic element class.\n * @param {string} baseClass - The CSS class name for the atomic element.\n * @returns {HTMLElement} The DOM element for the atomic element.\n * @throws {Error} If baseClass was not found on the element.\n */\nfunction _verifyClassExists(element, baseClass) {\n  const dom = element.classList.contains(baseClass)\n    ? element\n    : element.querySelector('.' + baseClass);\n  if (!dom) {\n    const msg = baseClass + ' not found on or in passed DOM node.';\n    throw new Error(msg);\n  }\n\n  return dom;\n}\n\n/**\n * Check that a particular element passed into the constructor of\n * an atomic component exists and that the correct atomic class\n * is present on the element.\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the atomic element class.\n * @param {string} baseClass - The CSS class name for the atomic element.\n * @returns {HTMLElement} The DOM element for the atomic element.\n * @throws {Error} If DOM element passed into the atomic element is not valid.\n */\nfunction checkDom(element, baseClass) {\n  _verifyElementExists(element, baseClass);\n  const dom = _verifyClassExists(element, baseClass);\n\n  return dom;\n}\n\n/**\n * Set a flag on an atomic component when it is initialized.\n * Use the returned boolean to handle cases where an atomic component\n * is initializing when it has already been initialized elsewhere.\n * @param {HTMLElement} element - The DOM element for the atomic component.\n * @returns {boolean} True if the init data-js-* hook attribute was set,\n *   false otherwise.\n */\nfunction setInitFlag(element) {\n  if (contains(element, INIT_FLAG)) {\n    return false;\n  }\n\n  add(element, INIT_FLAG);\n\n  return true;\n}\n\n/**\n * @param {string} selector - Selector to search for in the document.\n * @param {Function} Constructor - A constructor function.\n * @param {HTMLElement} [scope] - A dom node in which to query the selector.\n *   If not supplied, it defaults to the `document`.\n * @param {object} config - Configuration will be provided to the Constructor's init()\n * @returns {Array} List of instances that were instantiated.\n */\nfunction instantiateAll(selector, Constructor, scope, config = {}) {\n  const base = scope || document;\n  const elements = base.querySelectorAll(selector);\n  const insts = [];\n  let inst;\n  let element;\n  for (let i = 0, len = elements.length; i < len; i++) {\n    element = elements[i];\n    if (contains(element, INIT_FLAG) === false) {\n      inst = new Constructor(element);\n      inst.init(config);\n      insts.push(inst);\n    }\n  }\n  return insts;\n}\n\n// Expose public methods.\nexport { checkDom, instantiateAll, setInitFlag };\n", "/* ==========================================================================\n   Dom Behaviors\n   Behaviors are functionality that can be shared between different pieces\n   of markup. They are not strictly atomic, though they likely are used\n   on atomic components. An example of shared behavior may be a menu that\n   expands and collapses and sets the aria-expanded attribute on the HTML.\n   Or an input field that can be cleared by clicking an (x) button in the\n   input. These are both behaviors that may appear in different parts of\n   the codebase, but could share the same functionality.\n   Behaviors are added through the `data-js-hook` attribute on the HTML\n   and have a prefix of `behavior_`\n   (both those designators are set in modules/util/standard-type.js).\n   For example, `behaviors/FlyoutMenu.js` defines the behavior of\n   expanding and collapsing an expandable menu. At a minimum, three things\n   need to be defined: (A) The containing scope of the menu, (B) the trigger\n   to activate the menu, and (C) the content to show/hide when the trigger\n   is clicked. So the markup looks something like:\n   <div data-js-hook=\"behavior_flyout-menu\">\n     <button data-js-hook=\"behavior_flyout-menu_trigger\">\n     <div data-js-hook=\"behavior_flyout-menu_content\">\u2026</div>\n   </div>\n   ========================================================================== */\n\nimport {\n  BEHAVIOR_PREFIX,\n  JS_HOOK,\n  contains,\n} from '@cfpb/cfpb-atomic-component';\n\n/**\n * @param {string} behaviorSelector - Behavior type used to find the element\n *   within the dom.\n * @param {HTMLElement} baseElement - Containing element for the behavior element.\n * @returns {Array|NodeList} behaviorElements if it exists in the dom,\n *   null otherwise.\n */\nfunction _findElements(behaviorSelector, baseElement) {\n  baseElement = baseElement || document;\n  let behaviorElements = [];\n\n  try {\n    behaviorElements = baseElement.querySelectorAll(behaviorSelector);\n  } catch (error) {\n    const msg = `${behaviorSelector} not found in DOM! ${error}`;\n    throw new Error(msg);\n  }\n\n  if (\n    behaviorElements.length === 0 &&\n    behaviorSelector.indexOf(BEHAVIOR_PREFIX) === -1\n  ) {\n    // eslint-disable-next-line no-use-before-define\n    behaviorElements = find(behaviorSelector, baseElement);\n  }\n\n  return behaviorElements;\n}\n\n/**\n * @param {( string|HTMLElement|Array|NodeList )} behaviorElement - Used to\n *   query dom for elements.\n * @param {string} event - Event type to add to element.\n * @param {Function} eventHandler - Callback for event.\n * @param {HTMLElement} baseElement - Containing element\n *   for the behavior element.\n * @returns {Array|NodeList} if it exists in the dom, null otherwise.\n */\nfunction attach(behaviorElement, event, eventHandler, baseElement) {\n  let behaviorElements = [];\n\n  if (behaviorElement instanceof NodeList === true) {\n    behaviorElements = behaviorElement;\n  } else if (behaviorElement instanceof Node === true) {\n    behaviorElements = [behaviorElement];\n  } else if (typeof behaviorElement === 'string') {\n    behaviorElements = _findElements(behaviorElement, baseElement);\n  }\n\n  for (let i = 0, len = behaviorElements.length; i < len; i++) {\n    behaviorElements[i].addEventListener(event, eventHandler, false);\n  }\n\n  return behaviorElements;\n}\n\n/**\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the behavior in the data-js-hook attribute.\n * @param {string} behaviorDataAttr - The value in the data-js-hook.\n *   This is the name of the behavior.\n *   E.g. `behavior_flyout-menu`, `behavior_flyout-menu_content`.\n * @returns {HTMLElement} The DOM element that has an attached behavior.\n * @throws {Error} If data-js-hook attribute value was not found on DOM element.\n */\nfunction checkBehaviorDom(element, behaviorDataAttr) {\n  // Check that the behavior is found on the passed DOM node.\n  let dom;\n\n  if (contains(element, behaviorDataAttr)) {\n    dom = element;\n    return dom;\n  }\n\n  /* If the passed DOM node isn't null,\n     query the node to see if it's in the children. */\n  if (element) {\n    const selector = '[' + JS_HOOK + '=' + behaviorDataAttr + ']';\n    dom = element.querySelector(selector);\n  }\n\n  if (!dom) {\n    const msg = behaviorDataAttr + ' behavior not found on passed DOM node!';\n    throw new Error(msg);\n  }\n\n  return dom;\n}\n\n/**\n * @param {string} behaviorSelector - Behavior type used to find\n *   the element within the dom.\n * @param {HTMLElement} baseElement - Containing element\n *   for the behavior element.\n * @returns {NodeList} if it exists in the dom, null otherwise.\n */\nfunction find(behaviorSelector, baseElement) {\n  behaviorSelector = JS_HOOK + '*=' + BEHAVIOR_PREFIX + behaviorSelector;\n  behaviorSelector = '[' + behaviorSelector + ']';\n\n  return _findElements(behaviorSelector, baseElement);\n}\n\n/**\n * @param {HTMLElement} behaviorElement - Element in which to remove the event.\n * @param {string} event - Event type to remove from the element.\n * @param {Function} eventHandler - Callback for event.\n */\nfunction remove(behaviorElement, event, eventHandler) {\n  behaviorElement.removeEventListener(event, eventHandler);\n}\n\n// Expose public methods.\nexport { attach, checkBehaviorDom, find, remove };\n", "/* ==========================================================================\n   Javascript Type Checkers\n\n   Various utility functions to check Javascript types and primitives.\n\n   Contains code copied from with moderate modifications:\n\n   https://github.com/angular/angular.js/blob/master/src/Angular.js.\n   Copyright (c) 2010-2015 Google, Inc. http://angularjs.org\n\n   ========================================================================== */\n\nconst _toString = Object.prototype.toString;\n\n/**\n * @name isUndefined\n * @kind function\n * @description\n * Determines if a reference is undefined.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is undefined.\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * @name isDefined\n * @kind function\n * @description\n * Determines if a reference is defined.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is defined.\n */\nfunction isDefined(value) {\n  return typeof value !== 'undefined';\n}\n\n/**\n * @name isObject\n * @kind function\n * @description\n * Determines if a reference is an `Object`.\n * Unlike `typeof` in JavaScript, `null`s are not\n * considered to be objects. Note that JavaScript arrays are objects.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is an `Object` but not `null`.\n */\nfunction isObject(value) {\n  // http://jsperf.com/isobject4\n  return value !== null && typeof value === 'object';\n}\n\n/**\n * @name isString\n * @kind function\n * @description\n * Determines if a reference is a `String`.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is a `String`.\n */\nfunction isString(value) {\n  return _toString.call(value) === '[object String]';\n}\n\n/**\n * @name isNumber\n * @kind function\n * @description\n * Determines if a reference is a `Number`.\n *\n * This includes the \"special\" numbers `NaN`, `+Infinity` and `-Infinity`.\n *\n * If you wish to exclude these then you can use the native\n * [`isFinite'](https://developer.mozilla.org/en-US/docs/Web/JavaScript/\n *                      Reference/Global_Objects/isFinite)\n * method.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is a `Number`.\n */\nfunction isNumber(value) {\n  return _toString.call(value) === '[object Number]';\n}\n\n/**\n * @name isDate\n * @kind function\n * @description\n * Determines if a value is a date.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is a `Date`.\n */\nfunction isDate(value) {\n  return _toString.call(value) === '[object Date]';\n}\n\n/**\n * @name isArray\n * @kind function\n * @description\n * Determines if a reference is an `Array`.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is an `Array`.\n */\nconst isArray =\n  Array.isArray ||\n  function isArray(value) {\n    return _toString.call(value) === '[object Array]';\n  };\n\n/**\n * @name isFunction\n * @kind function\n * @description\n * Determines if a reference is a `Function`.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is a `Function`.\n */\nfunction isFunction(value) {\n  return _toString.call(value) === '[object Function]';\n}\n\n// TODO Fix complexity issue\n/* eslint-disable complexity, no-mixed-operators */\n/**\n * @name isEmpty\n * @kind function\n * @description\n * Determines if a reference is empty.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is empty.\n */\nfunction isEmpty(value) {\n  return (\n    isUndefined(value) ||\n    value === null ||\n    (isString(value) && value.length <= 0) ||\n    /^\\s*$/.test(value)\n  );\n}\n/* eslint-enable complexity, no-mixed-operators */\n\n// Expose public methods.\nexport {\n  isUndefined,\n  isDefined,\n  isObject,\n  isString,\n  isNumber,\n  isDate,\n  isArray,\n  isFunction,\n  isEmpty,\n};\n", "/* eslint-disable no-use-before-define */\nimport {\n  BEHAVIOR_PREFIX,\n  JS_HOOK,\n  BaseTransition,\n  EventObserver,\n  checkBehaviorDom,\n} from '@cfpb/cfpb-atomic-component';\n\nconst BASE_CLASS = BEHAVIOR_PREFIX + 'flyout-menu';\nconst SEL_PREFIX = '[' + JS_HOOK + '=' + BASE_CLASS;\n\n/**\n * FlyoutMenu\n * @class\n * @classdesc Initializes new FlyoutMenu behavior.\n * Behaviors are functionality that can be shared between different pieces\n * of markup. They are not strictly atomic, though they likely are used\n * on atomic components.\n * As added JS behavior, this is added through HTML data-js-hook attributes.\n *\n * Structure is:\n * behavior_flyout-menu\n *   behavior_flyout-menu_trigger\n *   behavior_flyout-menu_content\n *     behavior_flyout-menu_trigger (optional)\n *\n * The second trigger is optional and may be used for a button in the content\n * area, which may obscure the first trigger.\n * The flyout can be triggered through a click of either trigger.\n * @param {HTMLElement} element - The DOM element to attach FlyoutMenu behavior.\n * @param {boolean} autoHideContent - Whether to add `hidden` attribute to\n *   content when it is collapsed.\n * @returns {FlyoutMenu} An instance.\n */\nfunction FlyoutMenu(element, autoHideContent = true) {\n  // Verify that the expected dom attributes are present.\n  const _dom = checkBehaviorDom(element, BASE_CLASS);\n  const _triggerDoms = _findTriggers(element);\n  const _contentDom = checkBehaviorDom(element, BASE_CLASS + '_content');\n\n  // Flyouts appear in one of four states.\n  let _state = 0;\n  const COLLAPSED = 0;\n  const COLLAPSING = 1;\n  const EXPANDING = 2;\n  const EXPANDED = 3;\n\n  let _transition;\n  let _expandTransitionMethod;\n  let _collapseTransitionMethod;\n\n  // Binded events.\n  // Needed to add and remove events to transitions.\n  const _collapseEndBinded = _collapseEnd.bind(this);\n  const _expandEndBinded = _expandEnd.bind(this);\n\n  /* If this menu appears in a data source,\n     this can be used to store the source.\n     Examples include the index in an Array,\n     a key in an Hash, or a node in a Tree. */\n  let _data;\n\n  // Whether this instance's behaviors are suspended or not.\n  let _suspended = true;\n\n  /* Event immediately preceeding mouseover is touchstart,\n     if that event's present we'll want to ignore mouseover\n     to avoid a mouseover and click immediately after each other. */\n  let _touchTriggered = false;\n\n  /**\n   * Iterate over dom tree and find FlyoutMenu triggers.\n   * We need to exclude the ones that are nested FlyoutMenus, since those\n   * will be managed by their own instance of this class.\n   * @param {HTMLElement} element - The DOM element to search for triggers within.\n   * @returns {Array} List of trigger DOM references within this FlyoutMenu.\n   */\n  function _findTriggers(element) {\n    const triggersList = [];\n    const triggers = element.querySelectorAll(`${SEL_PREFIX}_trigger]`);\n\n    let trigger;\n    let triggerParent;\n    let isSubTrigger;\n    // Iterate backwards ensuring that length is an UInt32.\n    for (let i = triggers.length >>> 0; i--; ) {\n      isSubTrigger = false;\n      trigger = triggers[i];\n      triggerParent = trigger.parentElement;\n      while (triggerParent !== element) {\n        if (\n          triggerParent.getAttribute(JS_HOOK) &&\n          triggerParent.getAttribute(JS_HOOK).split(' ').indexOf(BASE_CLASS) !==\n            -1\n        ) {\n          isSubTrigger = true;\n          triggerParent = element;\n        } else {\n          triggerParent = triggerParent.parentElement;\n        }\n      }\n\n      if (!isSubTrigger) {\n        triggersList.unshift(triggers[i]);\n      }\n    }\n\n    return triggersList;\n  }\n\n  /**\n   * @returns {FlyoutMenu} An instance.\n   * @param {boolean} isExpanded - Whether the flyout menu is expanded at\n   *   initialization-time or collapsed.\n   */\n  function init(isExpanded = false) {\n    _state = isExpanded ? EXPANDED : COLLAPSED;\n    _triggerDoms.forEach((triggerDom) => {\n      _setAriaAttr('expanded', triggerDom, isExpanded);\n\n      triggerDom.addEventListener('click', _handleTriggerClicked.bind(this));\n      triggerDom.addEventListener('touchstart', _handleTouchStart, {\n        passive: true,\n      });\n      triggerDom.addEventListener('mouseover', _handleTriggerOver.bind(this));\n      triggerDom.addEventListener('mouseout', _handleTriggerOut.bind(this));\n    });\n\n    _contentDom.setAttribute('data-open', isExpanded ? 'true' : 'false');\n    if (autoHideContent && !isExpanded) _contentDom.setAttribute('hidden', '');\n\n    resume();\n\n    return this;\n  }\n\n  /**\n   * Set an aria attribute on an HTML element.\n   * @param {string} type - The aria attribute to set\n   *   (without the aria- prefix).\n   * @param {HTMLElement} elem - The element to set.\n   * @param {boolean} value - The value to set on `aria-expanded`,\n   *   casts to a string.\n   * @returns {string} The cast value.\n   */\n  function _setAriaAttr(type, elem, value) {\n    const strValue = String(value);\n    elem.setAttribute('aria-' + type, strValue);\n    return strValue;\n  }\n\n  /**\n   * Event handler for when the search input trigger is touched.\n   */\n  function _handleTouchStart() {\n    _touchTriggered = true;\n  }\n\n  /**\n   * Event handler for when the trigger is hovered over.\n   * @param {MouseEvent} event - The clicked flyout trigger event object.\n   */\n  function _handleTriggerOver(event) {\n    if (_suspended) return;\n\n    if (!_touchTriggered) {\n      this.dispatchEvent('triggerover', {\n        target: this,\n        trigger: event.target,\n        type: 'triggerover',\n      });\n    }\n\n    _touchTriggered = false;\n  }\n\n  /**\n   * Event handler for when the trigger is hovered out.\n   * @param {MouseEvent} event - The clicked flyout trigger event object.\n   */\n  function _handleTriggerOut(event) {\n    if (_suspended) return;\n\n    this.dispatchEvent('triggerout', {\n      target: this,\n      trigger: event.target,\n      type: 'triggerout',\n    });\n  }\n\n  /**\n   * Event handler for when the search input trigger is clicked,\n   * which opens/closes the search input.\n   * @param {MouseEvent} event - The clicked flyout trigger event object.\n   */\n  function _handleTriggerClicked(event) {\n    if (_suspended) return;\n\n    this.dispatchEvent('triggerclick', {\n      target: this,\n      trigger: event.target,\n      type: 'triggerclick',\n    });\n\n    event.preventDefault();\n\n    switch (_state) {\n      case COLLAPSED:\n      case COLLAPSING:\n        this.expand();\n        break;\n      case EXPANDING:\n      case EXPANDED:\n        this.collapse();\n        break;\n    }\n  }\n\n  /**\n   * Open the search box.\n   * @returns {FlyoutMenu} An instance.\n   */\n  function expand() {\n    _transition?.halt();\n    if (_state === EXPANDING || _state === EXPANDED) return this;\n\n    _state = EXPANDING;\n    if (autoHideContent) _contentDom.removeAttribute('hidden');\n    this.dispatchEvent('expandbegin', { target: this, type: 'expandbegin' });\n\n    // Only use transitions if both expand and collapse are set.\n    if (!_expandTransitionMethod || !_collapseTransitionMethod) {\n      _expandEndBinded();\n      return this;\n    }\n\n    const hasTransition = _transition?.isAnimated();\n    if (hasTransition) {\n      _transition.addEventListener(BaseTransition.END_EVENT, _expandEndBinded);\n    }\n\n    _expandTransitionMethod();\n\n    if (!hasTransition) {\n      _expandEndBinded();\n    }\n\n    return this;\n  }\n\n  /**\n   * Close the search box.\n   * If collapse is called when expand animation is underway,\n   * save a deferred call to collapse, which is called when\n   * expand completes.\n   * @returns {FlyoutMenu} An instance.\n   */\n  function collapse() {\n    _transition?.halt();\n    if (_state === COLLAPSING || _state === COLLAPSED) return this;\n\n    for (let i = 0, len = _triggerDoms.length; i < len; i++) {\n      _setAriaAttr('expanded', _triggerDoms[i], false);\n    }\n\n    _contentDom.setAttribute('data-open', 'false');\n\n    _state = COLLAPSING;\n    this.dispatchEvent('collapsebegin', {\n      target: this,\n      type: 'collapsebegin',\n    });\n\n    // Only use transitions if both expand and collapse are set.\n    if (!_collapseTransitionMethod || !_expandTransitionMethod) {\n      _collapseEndBinded();\n      return this;\n    }\n\n    const hasTransition = _transition?.isAnimated();\n    if (hasTransition) {\n      _transition.addEventListener(\n        BaseTransition.END_EVENT,\n        _collapseEndBinded,\n      );\n    }\n\n    _collapseTransitionMethod();\n\n    if (!hasTransition) {\n      _collapseEndBinded();\n    }\n\n    return this;\n  }\n\n  /**\n   * Expand animation has completed.\n   * Call deferred collapse function,\n   * if set (otherwise it will call a noop function).\n   */\n  function _expandEnd() {\n    _state = EXPANDED;\n    _contentDom.setAttribute('data-open', 'true');\n    if (_transition) {\n      _transition.removeEventListener(\n        BaseTransition.END_EVENT,\n        _expandEndBinded,\n      );\n    }\n    this.dispatchEvent('expandend', { target: this, type: 'expandend' });\n\n    for (let i = 0, len = _triggerDoms.length; i < len; i++) {\n      _setAriaAttr('expanded', _triggerDoms[i], true);\n    }\n  }\n\n  /**\n   * Collapse animation has completed.\n   */\n  function _collapseEnd() {\n    _state = COLLAPSED;\n\n    if (autoHideContent) _contentDom.setAttribute('hidden', '');\n\n    if (_transition) {\n      _transition.removeEventListener(\n        BaseTransition.END_EVENT,\n        _collapseEndBinded,\n      );\n    }\n\n    this.dispatchEvent('collapseend', { target: this, type: 'collapseend' });\n  }\n\n  /**\n   * Set the transition that runs when this flyout is expanded/collapsed.\n   * @param {BaseTransition} transition - A transition object.\n   * @param {Function} collapseMethod - The collapse method to call on the transition.\n   * @param {Function} expandMethod - The expand method to call on the transition.\n   */\n  function setTransition(transition, collapseMethod, expandMethod) {\n    _transition = transition;\n\n    if (collapseMethod && collapseMethod !== _collapseTransitionMethod) {\n      _collapseTransitionMethod = collapseMethod;\n    }\n\n    if (expandMethod && expandMethod !== _expandTransitionMethod) {\n      _expandTransitionMethod = expandMethod;\n    }\n  }\n\n  /**\n   * Clear the transitions attached to this FlyoutMenu instance.\n   */\n  function clearTransition() {\n    if (_transition) {\n      _transition.remove();\n    }\n\n    let UNDEFINED;\n\n    _transition = UNDEFINED;\n\n    _expandTransitionMethod = UNDEFINED;\n    _collapseTransitionMethod = UNDEFINED;\n  }\n\n  /**\n   * @returns {object}\n   *   Hash of container, content DOM references, and a list of trigger DOMs.\n   */\n  function getDom() {\n    return {\n      container: _dom,\n      content: _contentDom,\n      trigger: _triggerDoms,\n    };\n  }\n\n  /**\n   * Enable broadcasting of trigger events.\n   * @returns {boolean} True if resumed, false otherwise.\n   */\n  function resume() {\n    if (_suspended) _suspended = false;\n\n    return !_suspended;\n  }\n\n  /**\n   * Suspend broadcasting of trigger events.\n   * @returns {boolean} True if suspended, false otherwise.\n   */\n  function suspend() {\n    if (!_suspended) _suspended = true;\n\n    return _suspended;\n  }\n\n  /**\n   * @param {number | string | object} data - A data identifier\n   *   such as an Array index, Hash key, or Tree node.\n   * @returns {FlyoutMenu} An instance.\n   */\n  function setData(data) {\n    _data = data;\n\n    return this;\n  }\n\n  // Attach public events.\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.removeEventListener = eventObserver.removeEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n\n  this.init = init;\n  this.expand = expand;\n  this.collapse = collapse;\n  this.setTransition = setTransition;\n  this.clearTransition = clearTransition;\n  this.getData = () => _data;\n  this.getTransition = () => _transition;\n  this.getDom = getDom;\n  this.isAnimating = () => _state === EXPANDING || _state === COLLAPSING;\n  this.isExpanded = () => _state === EXPANDED;\n  this.resume = resume;\n  this.setData = setData;\n  this.suspend = suspend;\n\n  // Public static properties.\n  FlyoutMenu.BASE_CLASS = BASE_CLASS;\n\n  return this;\n}\n\nexport { FlyoutMenu };\n", "import { BaseTransition, EventObserver } from '@cfpb/cfpb-atomic-component';\n\n// Exported constants.\nconst CLASSES = {\n  CSS_PROPERTY: 'opacity',\n  BASE_CLASS: 'u-alpha-transition',\n  ALPHA_100: 'u-alpha-100',\n  ALPHA_0: 'u-alpha-0',\n};\n\n/**\n * AlphaTransition\n * @class\n * @classdesc Initializes new AlphaTransition behavior.\n * @param {HTMLElement} element - DOM element to apply opacity transition to.\n * @returns {AlphaTransition} An instance.\n */\nfunction AlphaTransition(element) {\n  const eventObserver = new EventObserver();\n  const _baseTransition = new BaseTransition(element, CLASSES, this);\n\n  /**\n   * @param {Function} initialClass - The initial state for this transition.\n   * @returns {AlphaTransition} An instance.\n   */\n  function init(initialClass) {\n    _baseTransition.init(initialClass);\n\n    return this;\n  }\n\n  /**\n   * Fade to 100% by applying a utility alpha class.\n   * @returns {AlphaTransition} An instance.\n   */\n  function fadeIn() {\n    _baseTransition.applyClass(CLASSES.ALPHA_100);\n\n    return this;\n  }\n\n  /**\n   * Fade to nothing by applying a utility alpha class.\n   * @returns {AlphaTransition} An instance.\n   */\n  function fadeOut() {\n    _baseTransition.applyClass(CLASSES.ALPHA_0);\n\n    return this;\n  }\n\n  // Attach public events.\n  this.addEventListener = eventObserver.addEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n  this.removeEventListener = eventObserver.removeEventListener;\n\n  this.animateOff = _baseTransition.animateOff;\n  this.animateOn = _baseTransition.animateOn;\n  this.halt = _baseTransition.halt;\n  this.isAnimated = _baseTransition.isAnimated;\n  this.remove = _baseTransition.remove;\n  this.setElement = _baseTransition.setElement;\n\n  this.fadeIn = fadeIn;\n  this.fadeOut = fadeOut;\n  this.init = init;\n\n  return this;\n}\n\n// Public static properties.\nAlphaTransition.CLASSES = CLASSES;\n\nexport { AlphaTransition };\n", "/**\n * BaseTransition\n * @class\n * @classdesc Initializes new BaseTransition behavior.\n *   This shouldn't be used directly, but instead should be\n *   the base class used through composition by a specific transition.\n * @param {HTMLElement} element - DOM element to apply transition to.\n * @param {object} classes - The classes to apply to this transition.\n * @param {object} child - The child transition using this as a base.\n * @returns {BaseTransition} An instance.\n */\nfunction BaseTransition(element, classes, child) {\n  const _classes = classes;\n  let _dom = element;\n  if (!child) throw new Error('Child transition argument must be defined!');\n  const _child = child;\n\n  let _lastClass;\n  let _transitionEndEvent;\n  let _transitionCompleteBinded;\n\n  let _isAnimated = false;\n  let _isAnimating = false;\n  let _isFlushed = false;\n\n  // Make sure required attributes are passed in.\n  if (\n    typeof _classes.CSS_PROPERTY === 'undefined' ||\n    typeof _classes.BASE_CLASS === 'undefined'\n  ) {\n    throw new Error(\n      'Transitions require CSS_PROPERTY and BASE_CLASS ' +\n        'to be passed into BaseTransition.',\n    );\n  }\n\n  /**\n   * Add an event listener to the transition, or call the transition\n   * complete handler immediately if the transition is not supported.\n   */\n  function _addEventListener() {\n    /*\n      If transition is supported and the animation is animated,\n      listen for transition end event, otherwise call the handler directly.\n      Some browsers (e.g. IE9/OperaMini) do not support transitionend event.\n      If \"transition-duration: 0s\" is set, transitionEnd event will not\n      fire, so we need to call the handler straight away.\n    */\n    if (_transitionEndEvent && _isAnimated) {\n      _dom.addEventListener(_transitionEndEvent, _transitionCompleteBinded);\n      _child.dispatchEvent(BaseTransition.BEGIN_EVENT, {\n        target: _child,\n        type: BaseTransition.BEGIN_EVENT,\n      });\n\n      _dom.classList.add(BaseTransition.ANIMATING_CLASS);\n      _isAnimating = true;\n    } else {\n      _child.dispatchEvent(BaseTransition.BEGIN_EVENT, {\n        target: _child,\n        type: BaseTransition.BEGIN_EVENT,\n      });\n      _transitionCompleteBinded();\n    }\n  }\n\n  /**\n   * Remove an event listener to the transition.\n   */\n  function _removeEventListener() {\n    _dom.removeEventListener(_transitionEndEvent, _transitionCompleteBinded);\n  }\n\n  /**\n   * Handle the end of a transition.\n   * @param {TransitionEvent} evt - Transition event object.\n   * @returns {boolean} True if transition was cleaned up,\n   *   false if an outside transitioning property triggered this event handler.\n   */\n  function _transitionComplete(evt) {\n    if (evt && evt.propertyName !== _classes.CSS_PROPERTY) {\n      return false;\n    }\n\n    _removeEventListener();\n    _dom.classList.remove(BaseTransition.ANIMATING_CLASS);\n    _child.dispatchEvent(BaseTransition.END_EVENT, {\n      target: _child,\n      type: BaseTransition.END_EVENT,\n    });\n    _isAnimating = false;\n    return true;\n  }\n\n  /**\n   * Search for and remove initial BaseTransition classes that have\n   * already been applied to this BaseTransition's target element.\n   */\n  function _flush() {\n    let prop;\n    for (prop in _classes) {\n      if (\n        {}.hasOwnProperty.call(_classes, prop) &&\n        _classes[prop] !== _classes.BASE_CLASS &&\n        _dom.classList.contains(_classes[prop])\n      ) {\n        _dom.classList.remove(_classes[prop]);\n      }\n    }\n  }\n\n  /**\n   * Halt an in-progress animation and call the complete event immediately.\n   */\n  function halt() {\n    if (!_isAnimating) {\n      return;\n    }\n    _dom.style.webkitTransitionDuration = '0';\n    _dom.style.mozTransitionDuration = '0';\n    _dom.style.oTransitionDuration = '0';\n    _dom.style.transitionDuration = '0';\n    _dom.removeEventListener(_transitionEndEvent, _transitionCompleteBinded);\n    _transitionCompleteBinded();\n    _dom.style.webkitTransitionDuration = '';\n    _dom.style.mozTransitionDuration = '';\n    _dom.style.oTransitionDuration = '';\n    _dom.style.transitionDuration = '';\n  }\n\n  /**\n   * Remove all transition classes, if transition is initialized.\n   */\n  function remove() {\n    halt();\n    _flush();\n    _dom.classList.remove(_classes.BASE_CLASS);\n  }\n\n  /**\n   * Add a \"transition-duration: 0s\" utility CSS class.\n   */\n  function animateOn() {\n    _dom.classList.remove(BaseTransition.NO_ANIMATION_CLASS);\n    _isAnimated = true;\n  }\n\n  /**\n   * Remove a \"transition-duration: 0s\" utility CSS class.\n   */\n  function animateOff() {\n    _dom.classList.add(BaseTransition.NO_ANIMATION_CLASS);\n    _isAnimated = false;\n  }\n\n  /**\n   * @param {HTMLElement} elem - The element to check\n   *   for support of transition end event.\n   * @returns {string} The browser-prefixed transition end event.\n   */\n  function _getTransitionEndEvent(elem) {\n    if (!elem) {\n      const msg = 'Element does not have TransitionEnd event. It may be null!';\n      throw new Error(msg);\n    }\n\n    let transition;\n    const transitions = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend',\n    };\n\n    let transitionEvent;\n    for (transitionEvent in transitions) {\n      if (\n        {}.hasOwnProperty.call(transitions, transitionEvent) &&\n        typeof elem.style[transitionEvent] !== 'undefined'\n      ) {\n        transition = transitions[transitionEvent];\n        break;\n      }\n    }\n    return transition;\n  }\n\n  /**\n   * Set the HTML element target of this transition.\n   * @param {HTMLElement} targetElement - The target of the transition.\n   */\n  function setElement(targetElement) {\n    // Clear the transition classes from the old element.\n    remove();\n    animateOn();\n\n    _dom = targetElement;\n    _dom.classList.add(_classes.BASE_CLASS);\n    _transitionEndEvent = _getTransitionEndEvent(_dom);\n  }\n\n  /**\n   * @param {Function} initialClass - The initial state for this transition.\n   * @returns {BaseTransition} An instance.\n   */\n  function init(initialClass) {\n    _isAnimated = !_dom.classList.contains(BaseTransition.NO_ANIMATION_CLASS);\n    _transitionCompleteBinded = _transitionComplete.bind(this);\n    setElement(_dom);\n    if (!initialClass) {\n      throw new Error(\n        'Transition needs to be passed an initial CSS class on initialization!',\n      );\n    }\n    _dom.classList.add(initialClass);\n\n    return this;\n  }\n\n  /**\n   * @param {string} className - A CSS class.\n   * @returns {boolean} False if the class is already applied,\n   *   otherwise true if the class was applied.\n   */\n  function applyClass(className) {\n    if (!_isFlushed) {\n      _flush();\n      _isFlushed = true;\n    }\n\n    if (_dom.classList.contains(className)) {\n      return false;\n    }\n\n    _removeEventListener();\n    _dom.classList.remove(_lastClass);\n    _lastClass = className;\n    _addEventListener();\n    _dom.classList.add(_lastClass);\n\n    return true;\n  }\n\n  // Attach public events.\n  this.animateOff = animateOff;\n  this.animateOn = animateOn;\n  this.applyClass = applyClass;\n  this.halt = halt;\n  this.init = init;\n  this.isAnimated = () => _isAnimated;\n  this.remove = remove;\n  this.setElement = setElement;\n\n  return this;\n}\n\n// Public static constants.\nBaseTransition.BEGIN_EVENT = 'transitionbegin';\nBaseTransition.END_EVENT = 'transitionend';\nBaseTransition.NO_ANIMATION_CLASS = 'u-no-animation';\nBaseTransition.ANIMATING_CLASS = 'u-is-animating';\n\nexport { BaseTransition };\n", "import { BaseTransition, EventObserver } from '@cfpb/cfpb-atomic-component';\n\n// Exported constants.\nconst CLASSES = {\n  CSS_PROPERTY: 'max-height',\n  BASE_CLASS: 'u-max-height-transition',\n  MH_DEFAULT: 'u-max-height-default',\n  MH_SUMMARY: 'u-max-height-summary',\n  MH_ZERO: 'u-max-height-zero',\n};\n\n/**\n * MoveTransition\n * @class\n * @classdesc Initializes new MoveTransition behavior.\n * @param {HTMLElement} element - DOM element to apply transition to.\n * @returns {MaxHeightTransition} An instance.\n */\nfunction MaxHeightTransition(element) {\n  const eventObserver = new EventObserver();\n  const _baseTransition = new BaseTransition(element, CLASSES, this);\n  let _previousHeight = 0;\n\n  /**\n   * Refresh the max height set on the element.\n   * This may be useful if resizing the window and the content height changes.\n   */\n  function refresh() {\n    const elmHeight = element.scrollHeight;\n    const newHeight = elmHeight + 'px';\n    element.style.maxHeight = newHeight;\n  }\n\n  /**\n   * The whole page has loaded,\n   * including all dependent resources such as stylesheets and images.\n   */\n  function _pageLoaded() {\n    window.removeEventListener('load', _pageLoaded);\n    refresh();\n  }\n\n  /**\n   * @param {Function} initialClass - The initial state for this transition.\n   * @returns {MaxHeightTransition} An instance.\n   */\n  function init(initialClass) {\n    _baseTransition.init(initialClass);\n\n    /*\n    The scrollHeight of an element may be incorrect if the page hasn't\n    fully loaded yet, so we listen for that to happen before calculating\n    the element max-height.\n    */\n    window.addEventListener('load', _pageLoaded);\n\n    /*\n    The scrollHeight of an element may change on page load.\n    */\n    window.addEventListener('resize', () => {\n      refresh();\n    });\n\n    return this;\n  }\n\n  /**\n   * Reset the max-height to the default size.\n   * @returns {MaxHeightTransition} An instance.\n   */\n  function maxHeightDefault() {\n    refresh();\n    _baseTransition.applyClass(CLASSES.MH_DEFAULT);\n\n    if (!_previousHeight || element.scrollHeight > _previousHeight) {\n      _previousHeight = element.scrollHeight;\n    }\n\n    return this;\n  }\n\n  /**\n   * Collapses the max-height to just a summary height.\n   * @returns {MaxHeightTransition} An instance.\n   */\n  function maxHeightSummary() {\n    _baseTransition.applyClass(CLASSES.MH_SUMMARY);\n\n    _previousHeight = element.scrollHeight;\n\n    return this;\n  }\n\n  /**\n   * Collapses thte max-height completely.\n   * @returns {MaxHeightTransition} An instance.\n   */\n  function maxHeightZero() {\n    _baseTransition.applyClass(CLASSES.MH_ZERO);\n\n    _previousHeight = element.scrollHeight;\n\n    return this;\n  }\n\n  /**\n   * Remove style attribute.\n   * Remove all transition classes, if transition is initialized.\n   * @returns {boolean}\n   *   True, if the element's CSS classes were touched, false otherwise.\n   */\n  function remove() {\n    element.style.maxHeight = '';\n    return _baseTransition.remove();\n  }\n\n  // Attach public events.\n  this.addEventListener = eventObserver.addEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n  this.removeEventListener = eventObserver.removeEventListener;\n\n  this.animateOff = _baseTransition.animateOff;\n  this.animateOn = _baseTransition.animateOn;\n  this.halt = _baseTransition.halt;\n  this.isAnimated = _baseTransition.isAnimated;\n  this.setElement = _baseTransition.setElement;\n  this.refresh = refresh;\n  this.remove = remove;\n\n  this.init = init;\n  this.maxHeightDefault = maxHeightDefault;\n  this.maxHeightSummary = maxHeightSummary;\n  this.maxHeightZero = maxHeightZero;\n\n  return this;\n}\n\n// Public static properties.\nMaxHeightTransition.CLASSES = CLASSES;\n\nexport { MaxHeightTransition };\n", "import { BaseTransition, EventObserver } from '@cfpb/cfpb-atomic-component';\n\n// Exported constants.\nconst CLASSES = {\n  CSS_PROPERTY: 'transform',\n  BASE_CLASS: 'u-move-transition',\n  MOVE_TO_ORIGIN: 'u-move-to-origin',\n  MOVE_LEFT: 'u-move-left',\n  MOVE_LEFT_2X: 'u-move-left-2x',\n  MOVE_LEFT_3X: 'u-move-left-3x',\n  MOVE_RIGHT: 'u-move-right',\n  MOVE_UP: 'u-move-up',\n};\n\n/**\n * MoveTransition\n * @class\n * @classdesc Initializes new MoveTransition behavior.\n * @param {HTMLElement} element - DOM element to apply move transition to.\n * @returns {MoveTransition} An instance.\n */\nfunction MoveTransition(element) {\n  const eventObserver = new EventObserver();\n  const _baseTransition = new BaseTransition(element, CLASSES, this);\n\n  /**\n   * @param {Function} initialClass - The initial state for this transition.\n   * @returns {MoveTransition} An instance.\n   */\n  function init(initialClass) {\n    _baseTransition.init(initialClass);\n\n    return this;\n  }\n\n  /**\n   * Move to the element's original coordinates.\n   * @returns {MoveTransition} An instance.\n   */\n  function moveToOrigin() {\n    _baseTransition.applyClass(CLASSES.MOVE_TO_ORIGIN);\n\n    return this;\n  }\n\n  /**\n   * Move to the left by applying a utility move class.\n   * @param {number} count - How many times to move left\n   *   as a multiplication of the element's width.\n   * @returns {MoveTransition} An instance.\n   */\n  function _moveLeft(count) {\n    count = count || 1;\n    const moveClasses = [\n      CLASSES.MOVE_LEFT,\n      CLASSES.MOVE_LEFT_2X,\n      CLASSES.MOVE_LEFT_3X,\n    ];\n\n    _baseTransition.applyClass(moveClasses[count - 1]);\n\n    return this;\n  }\n\n  /**\n   * Move to the right by applying a utility move class.\n   * @returns {MoveTransition} An instance.\n   */\n  function moveRight() {\n    _baseTransition.applyClass(CLASSES.MOVE_RIGHT);\n\n    return this;\n  }\n\n  /**\n   * Move up by applying a utility move class.\n   * @returns {MoveTransition} An instance.\n   */\n  function moveUp() {\n    _baseTransition.applyClass(CLASSES.MOVE_UP);\n\n    return this;\n  }\n\n  // Attach public events.\n  this.addEventListener = eventObserver.addEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n  this.removeEventListener = eventObserver.removeEventListener;\n\n  this.animateOff = _baseTransition.animateOff;\n  this.animateOn = _baseTransition.animateOn;\n  this.halt = _baseTransition.halt;\n  this.isAnimated = _baseTransition.isAnimated;\n  this.setElement = _baseTransition.setElement;\n  this.remove = _baseTransition.remove;\n\n  this.init = init;\n  this.moveLeft = () => _moveLeft(1);\n  this.moveLeft2 = () => _moveLeft(2);\n  this.moveLeft3 = () => _moveLeft(3);\n  this.moveRight = moveRight;\n  this.moveToOrigin = moveToOrigin;\n  this.moveUp = moveUp;\n\n  return this;\n}\n\n// Public static properties.\nMoveTransition.CLASSES = CLASSES;\n\nexport { MoveTransition };\n", "/* ==========================================================================\n   Expandable Organism\n   ========================================================================== */\n\nimport {\n  add as addDataHook,\n  checkDom,\n  setInitFlag,\n  instantiateAll,\n  MaxHeightTransition,\n  EventObserver,\n  FlyoutMenu,\n} from '@cfpb/cfpb-atomic-component';\n\nconst BASE_CLASS = 'o-expandable';\n\n/**\n * Expandable\n * @class\n * @classdesc Initializes a new Expandable molecule.\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the molecule.\n * @returns {Expandable} An instance.\n */\nfunction Expandable(element) {\n  // Internal vars.\n  const _dom = checkDom(element, BASE_CLASS);\n  let _targetDom;\n  let _contentDom;\n  let _labelDom;\n\n  // Animation vars.\n  let _transition;\n  let _flyout;\n\n  /**\n   * Set up and create the multiselect.\n   * @returns {Expandable} An instance.\n   */\n  function init() {\n    if (!setInitFlag(_dom)) {\n      return this;\n    }\n\n    _targetDom = _dom.querySelector(`.${BASE_CLASS}_header`);\n    _contentDom = _dom.querySelector(`.${BASE_CLASS}_content`);\n    _labelDom = _dom.querySelector(`.${BASE_CLASS}_label`);\n\n    const isExpanded = _dom.classList.contains(`${BASE_CLASS}__onload-open`);\n\n    // Add behavior hooks.\n    addDataHook(_dom, 'behavior_flyout-menu');\n    addDataHook(_targetDom, 'behavior_flyout-menu_trigger');\n    addDataHook(_contentDom, 'behavior_flyout-menu_content');\n\n    // If it's expanded we don't set an initial height,\n    // as it will be calculated internally.\n    const initialClass = isExpanded\n      ? MaxHeightTransition.CLASSES.MH_DEFAULT\n      : MaxHeightTransition.CLASSES.MH_ZERO;\n    _transition = new MaxHeightTransition(_contentDom).init(initialClass);\n\n    // Create root menu.\n    _flyout = new FlyoutMenu(_dom);\n\n    _flyout.setTransition(\n      _transition,\n      _transition.maxHeightZero,\n      _transition.maxHeightDefault,\n    );\n\n    _flyout.init(isExpanded);\n\n    // Add events.\n    _flyout.addEventListener('expandbegin', () => {\n      _contentDom.classList.remove('u-hidden');\n      this.dispatchEvent('expandbegin', { target: this });\n    });\n    _flyout.addEventListener('collapseend', () => {\n      _contentDom.classList.add('u-hidden');\n    });\n\n    return this;\n  }\n\n  /**\n   * @returns {string} The expandable label text.\n   */\n  function getLabelText() {\n    return _labelDom.textContent.trim();\n  }\n\n  // Attach public events.\n  this.init = init;\n  this.expand = () => _flyout.expand();\n  this.collapse = () => _flyout.collapse();\n  this.isExpanded = () => _flyout.isExpanded();\n  this.refresh = () => _flyout.getTransition().refresh();\n  this.getLabelText = getLabelText;\n\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.removeEventListener = eventObserver.removeEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n\n  return this;\n}\n\nExpandable.BASE_CLASS = BASE_CLASS;\nExpandable.init = (scope) =>\n  instantiateAll(`.${Expandable.BASE_CLASS}`, Expandable, scope);\n\nexport { Expandable };\n", "/* ==========================================================================\n   Expandable Organism\n   ========================================================================== */\n\nimport {\n  checkDom,\n  setInitFlag,\n  instantiateAll,\n} from '@cfpb/cfpb-atomic-component';\nimport { Expandable } from '@cfpb/cfpb-expandables';\n\nconst BASE_CLASS = 'o-expandable-group';\n\n/**\n * ExpandableGroup\n * @class\n * @classdesc Initializes a new Expandable molecule.\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the molecule.\n * @returns {ExpandableGroup} An instance.\n */\nfunction ExpandableGroup(element) {\n  // Internal vars.\n  const _dom = checkDom(element, BASE_CLASS);\n  const _isAccordion = _dom.classList.contains(`${BASE_CLASS}__accordion`);\n  let _expandables;\n  let _lastExpanded;\n\n  /**\n   * @param {object} evt - The event object.\n   */\n  function _handleExpandBegin(evt) {\n    const target = evt.target;\n    if (_lastExpanded && _lastExpanded !== target) {\n      _lastExpanded.collapse();\n    }\n    _lastExpanded = target;\n  }\n\n  /**\n   * Set up and create the multiselect.\n   * @param {Array} expandables - List of expandables inside this group.\n   * @returns {ExpandableGroup} An instance.\n   */\n  function init(expandables) {\n    if (!setInitFlag(_dom)) {\n      return this;\n    }\n\n    if (_isAccordion) {\n      _expandables = expandables;\n\n      _expandables.forEach((expandable) => {\n        expandable.addEventListener('expandbegin', _handleExpandBegin);\n      });\n    }\n\n    return this;\n  }\n\n  // Attach public events.\n  this.init = init;\n\n  return this;\n}\n\nExpandableGroup.BASE_CLASS = BASE_CLASS;\nExpandableGroup.init = (scope) => {\n  const base = scope || document;\n  const expandableGroupsDom = base.querySelectorAll(`.${BASE_CLASS}`);\n  expandableGroupsDom.forEach((expandableGroupDom) => {\n    const expandables = instantiateAll(\n      `.${Expandable.BASE_CLASS}`,\n      Expandable,\n      expandableGroupDom,\n    );\n    const expandableGroup = new ExpandableGroup(expandableGroupDom);\n    expandableGroup.init(expandables);\n  });\n};\n\nexport { ExpandableGroup };\n", "/* ==========================================================================\n   Design System\n   Breakpoint JavaScript variables.\n   All values are pixel based.\n\n   NOTE: If any of the values in this file are adjusted,\n         they need to be adjusted in vars-breakpoints.less as well.\n   ========================================================================== */\n\nexport default {\n  bpXS: {\n    min: 0,\n    max: 600,\n  },\n  bpSM: {\n    min: 601,\n    max: 900,\n  },\n  bpMED: {\n    min: 901,\n    max: 1020,\n  },\n  bpLG: {\n    min: 1021,\n    max: 1200,\n  },\n  bpXL: {\n    min: 1201,\n  },\n};\n", "/* ==========================================================================\n   Get Breakpoint State\n   ========================================================================== */\n\nimport varsBreakpoints from '@cfpb/cfpb-core/src/vars-breakpoints.js';\n\n/**\n * @returns {number} The base font size set on the body element.\n */\nfunction _getBodyBaseFontSize() {\n  let fontSize = getComputedStyle(document.body).fontSize;\n  fontSize = fontSize === '' ? -1 : fontSize;\n  return parseFloat(fontSize);\n}\n\n/**\n * @param {object} breakpointRange - Object containing breakpoint constants.\n *   For example, for `bpXS` the value `{ min: 0, max: 600 }` would be passed.\n * @param {number} width - Current window width.\n * @returns {boolean} Whether the passed width is within a breakpoint range.\n */\nfunction _inBreakpointRange(breakpointRange, width) {\n  let breakpointRangeMin = breakpointRange.min;\n  let breakpointRangeMax = breakpointRange.max;\n\n  // Whether the user has set a custom size for the font in their browser.\n  const useEmsConversation =\n    _getBodyBaseFontSize() > 0 && _getBodyBaseFontSize() !== 16;\n  if (useEmsConversation) {\n    /* 16 = base font size without adjustments.\n       The CSS converts breakpoints to ems, which then change the width of the\n       pixel width of the breakpoint. In JavaScript, the breakpoints are defined\n       in pixels, so we first convert them to ems using the 16px base font size\n       and then multiply them by any adjustments set by customizations of the\n       font size in the user's browser. */\n    breakpointRangeMin = (breakpointRangeMin / 16) * _getBodyBaseFontSize();\n    breakpointRangeMax = (breakpointRangeMax / 16) * _getBodyBaseFontSize();\n  }\n\n  const min = breakpointRangeMin || 0;\n  const max = breakpointRangeMax || Number.POSITIVE_INFINITY;\n\n  return min <= width && width <= max;\n}\n\n/**\n * @param {number} width - Current window width.\n * @returns {object} An object literal with boolean\n *   bpXS, bpSM, bpMED, bpLG, bpXL properties.\n */\nfunction getBreakpointState(width) {\n  const breakpointState = {};\n  width = width || window.innerWidth;\n\n  let rangeKey;\n  // eslint-disable-next-line guard-for-in\n  for (rangeKey in varsBreakpoints) {\n    breakpointState[rangeKey] = _inBreakpointRange(\n      varsBreakpoints[rangeKey],\n      width,\n    );\n  }\n\n  return breakpointState;\n}\n\n// Constants for breakpoint groupings.\nconst MOBILE = 'mobile';\nconst TABLET = 'tablet';\nconst DESKTOP = 'desktop';\n\n/**\n * Checks whether the current breakpoint is in a particular breakpoint group.\n * @param {string} breakpointGroup - Breakpoint group names.\n * @returns {boolean} True if in the breakpoint group, otherwise false.\n */\nfunction viewportIsIn(breakpointGroup) {\n  let response = false;\n  const currentBreakpoint = getBreakpointState();\n\n  if (\n    (breakpointGroup === MOBILE && currentBreakpoint.bpXS) ||\n    (breakpointGroup === TABLET && currentBreakpoint.bpSM) ||\n    (breakpointGroup === DESKTOP &&\n      (currentBreakpoint.bpMED ||\n        currentBreakpoint.bpLG ||\n        currentBreakpoint.bpXL))\n  ) {\n    response = true;\n  }\n\n  return response;\n}\n\n// Expose public methods.\nexport { MOBILE, TABLET, DESKTOP, getBreakpointState, viewportIsIn };\n", "/* eslint-disable no-use-before-define */\nimport {\n  add as addDataHook,\n  checkDom,\n  instantiateAll,\n  setInitFlag,\n  FlyoutMenu,\n  MaxHeightTransition,\n  EventObserver,\n} from '@cfpb/cfpb-atomic-component';\nimport { MOBILE, viewportIsIn } from '../../cfpb-core/src/breakpoint-state.js';\n\nconst BASE_CLASS = 'o-summary';\n\n/**\n * Summary\n * @class\n * @classdesc Initializes a new Summary organism.\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the organism.\n * @returns {Summary} An instance.\n */\nfunction Summary(element) {\n  const _dom = checkDom(element, BASE_CLASS);\n  const _hasMobileModifier = _dom.classList.contains(`${BASE_CLASS}__mobile`);\n  const _contentDom = _dom.querySelector(`.${BASE_CLASS}_content`);\n  const _btnDom = _dom.querySelector(`.${BASE_CLASS}_btn`);\n  let _transition;\n  let _flyout;\n\n  // Whether this instance's behaviors are suspended or not.\n  let _suspended;\n\n  /**\n   * @returns {Summary} An instance.\n   */\n  function init() {\n    if (!setInitFlag(_dom)) {\n      return this;\n    }\n\n    _suspended = !_shouldSuspend();\n\n    // Add FlyoutMenu behavior data-js-hooks.\n    addDataHook(_dom, 'behavior_flyout-menu');\n    addDataHook(_contentDom, 'behavior_flyout-menu_content');\n    addDataHook(_btnDom, 'behavior_flyout-menu_trigger');\n\n    // Don't initialize the Summary till the page has loaded, so we can have\n    // an accurate idea of its height.\n    window.addEventListener('load', _pageLoadHandler);\n\n    return this;\n  }\n\n  /**\n   * The page (content + CSS) has loaded.\n   */\n  function _pageLoadHandler() {\n    window.removeEventListener('load', _pageLoadHandler);\n\n    _flyout = new FlyoutMenu(_dom, false);\n    _transition = new MaxHeightTransition(_contentDom);\n    _transition.init(\n      _suspended\n        ? MaxHeightTransition.CLASSES.MH_SUMMARY\n        : MaxHeightTransition.CLASSES.MH_DEFAULT,\n    );\n    _flyout.setTransition(\n      _transition,\n      _transition.maxHeightSummary,\n      _transition.maxHeightDefault,\n    );\n    _flyout.addEventListener('triggerclick', _triggerClickHandler);\n    _flyout.init();\n\n    _resizeHandler();\n\n    window.addEventListener('resize', _resizeHandler);\n    // Pipe window resize handler into orientation change on supported devices.\n    if ('onorientationchange' in window) {\n      window.addEventListener('orientationchange', _resizeHandler);\n    }\n\n    _dom.addEventListener('focusin', _focusInHandler);\n\n    /* When we click inside the content area we may be changing the size,\n       such as when a video player expands on being clicked.\n       So, let's refresh the transition to recalculate the max-height,\n       just in case. */\n    _contentDom.addEventListener('click', _contentClicked);\n  }\n\n  /**\n   * Handling tabbing into the content area that is hidden.\n   * If the focus goes onto a focusable element within the content area,\n   * we'll act like the summary expansion button was clicked.\n   * @param {Event} evt - The focus event.\n   */\n  function _focusInHandler(evt) {\n    if (!_suspended && evt.target !== _btnDom) {\n      _btnDom.click();\n      _dom.removeEventListener('focusin', _focusInHandler);\n    }\n  }\n\n  /**\n   * Handler for when the content area is clicked.\n   * Refresh the transition to recalculate the max-height.\n   * @param {MouseEvent} evt - the mouse event object.\n   */\n  function _contentClicked(evt) {\n    /* We don't need to refresh if a link was clicked as we'll be navigating\n       to another page. */\n    if (evt.target.tagName !== 'A' && _flyout.isExpanded()) {\n      _transition.refresh();\n    }\n  }\n\n  /**\n   * Handle resizing of the window,\n   * suspends or resumes the mobile or desktop behaviors.\n   */\n  function _resizeHandler() {\n    if (_shouldSuspend()) {\n      _suspend();\n    } else {\n      _resume();\n    }\n  }\n\n  /**\n   * @returns {boolean} True if this should be suspended, false otherwise.\n   */\n  function _shouldSuspend() {\n    /* Bail out of initializatiion if the height of the summary's content\n       is less than our summary height of 5.5ems\n       16 * 5.5 = 88\n       See https://github.com/cfpb/design-system/blob/72623270013f2ad08dbe92b5b709ed2b434ee41e/packages/cfpb-atomic-component/src/utilities/transition/transition.less#L84\n    */\n    return (\n      (_hasMobileModifier && !viewportIsIn(MOBILE)) ||\n      _contentDom.scrollHeight <= 88\n    );\n  }\n\n  /**\n   * Handle click of flyout.\n   */\n  function _triggerClickHandler() {\n    _flyout.addEventListener('expandend', _expandEndHandler);\n  }\n\n  /**\n   * After the summary opens, remove the \"read more\" button.\n   */\n  function _expandEndHandler() {\n    _hideButton();\n    window.removeEventListener('resize', _resizeHandler);\n    window.removeEventListener('orientationchange', _resizeHandler);\n    _flyout.removeEventListener('expandend', _expandEndHandler);\n    _flyout.suspend();\n    _transition.remove();\n  }\n\n  /**\n   *\n   */\n  function _showButton() {\n    _btnDom.classList.remove('u-hidden');\n  }\n\n  /**\n   *\n   */\n  function _hideButton() {\n    _btnDom.classList.add('u-hidden');\n  }\n\n  /**\n   * Add events necessary for the desktop menu behaviors.\n   * @returns {boolean} Whether it has successfully been resumed or not.\n   */\n  function _resume() {\n    if (_suspended) {\n      _flyout.collapse();\n      _transition.animateOn();\n      _showButton();\n\n      _suspended = false;\n    }\n\n    return !_suspended;\n  }\n\n  /**\n   * Remove events necessary for the desktop menu behaviors.\n   * @returns {boolean} Whether it has successfully been suspended or not.\n   */\n  function _suspend() {\n    if (!_suspended) {\n      _transition.animateOff();\n      _flyout.expand();\n      _hideButton();\n\n      _suspended = true;\n    }\n\n    return _suspended;\n  }\n\n  // Attach public events.\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.removeEventListener = eventObserver.removeEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n\n  this.init = init;\n\n  return this;\n}\n\nSummary.BASE_CLASS = BASE_CLASS;\nSummary.init = (scope) => instantiateAll(`.${BASE_CLASS}`, Summary, scope);\n\nexport { Summary };\n", "/* eslint-disable no-use-before-define */\nimport {\n  add as addDataHook,\n  checkDom,\n  instantiateAll,\n  setInitFlag,\n  FlyoutMenu,\n  MaxHeightTransition,\n  EventObserver,\n} from '@cfpb/cfpb-atomic-component';\n\nconst BASE_CLASS = 'o-summary-minimal';\n\n/**\n * SummaryMinimal\n * @class\n * @classdesc Initializes a new SummaryMinimal organism.\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the organism.\n * @returns {SummaryMinimal} An instance.\n */\nfunction SummaryMinimal(element) {\n  const _dom = checkDom(element, BASE_CLASS);\n  const _contentDom = _dom.querySelector(`.${BASE_CLASS}_content`);\n  const _btnDom = _dom.querySelector(`.${BASE_CLASS}_btn`);\n  let _transition;\n  let _flyout;\n\n  /**\n   * @returns {SummaryMinimal} An instance.\n   */\n  function init() {\n    if (!setInitFlag(_dom)) {\n      return this;\n    }\n\n    // Add FlyoutMenu behavior data-js-hooks.\n    addDataHook(_dom, 'behavior_flyout-menu');\n    addDataHook(_contentDom, 'behavior_flyout-menu_content');\n    addDataHook(_btnDom, 'behavior_flyout-menu_trigger');\n\n    // Don't initialize the SummaryMinimal till the page has loaded,\n    // so we can have an accurate idea of its height.\n    window.addEventListener('load', _pageLoadHandler);\n\n    return this;\n  }\n\n  /**\n   * The page (content + CSS) has loaded.\n   */\n  function _pageLoadHandler() {\n    window.removeEventListener('load', _pageLoadHandler);\n\n    _flyout = new FlyoutMenu(_dom, false);\n    _transition = new MaxHeightTransition(_contentDom);\n    _transition.init(MaxHeightTransition.CLASSES.MH_SUMMARY);\n    _flyout.setTransition(\n      _transition,\n      _transition.maxHeightSummary,\n      _transition.maxHeightDefault,\n    );\n    _flyout.init();\n\n    _dom.addEventListener('focusin', _focusInHandler);\n\n    /* When we click inside the content area we may be changing the size,\n       such as when a video player expands on being clicked.\n       So, let's refresh the transition to recalculate the max-height,\n       just in case. */\n    _contentDom.addEventListener('click', _contentClicked);\n\n    _flyout.collapse();\n    _transition.animateOn();\n  }\n\n  /**\n   * Handling tabbing into the content area that is hidden.\n   * If the focus goes onto a focusable element within the content area,\n   * we'll act like the summary expansion button was clicked.\n   * @param {Event} evt - The focus event.\n   */\n  function _focusInHandler(evt) {\n    if (evt.target !== _btnDom) {\n      _btnDom.click();\n      _dom.removeEventListener('focusin', _focusInHandler);\n    }\n  }\n\n  /**\n   * Handler for when the content area is clicked.\n   * Refresh the transition to recalculate the max-height.\n   * @param {MouseEvent} evt - the mouse event object.\n   */\n  function _contentClicked(evt) {\n    /* We don't need to refresh if a link was clicked as we'll be navigating\n       to another page. */\n    if (evt.target.tagName !== 'A' && _flyout.isExpanded()) {\n      _transition.refresh();\n    }\n  }\n\n  // Attach public events.\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.removeEventListener = eventObserver.removeEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n\n  this.init = init;\n\n  return this;\n}\n\nSummaryMinimal.BASE_CLASS = BASE_CLASS;\nSummaryMinimal.init = (scope) =>\n  instantiateAll(`.${BASE_CLASS}`, SummaryMinimal, scope);\n\nexport { SummaryMinimal };\n"],
  "mappings": "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",
  "names": ["JS_HOOK", "BEHAVIOR_PREFIX", "STATE_PREFIX", "EventObserver", "_events", "addEventListener", "event", "callback", "removeEventListener", "index", "dispatchEvent", "options", "evts", "i", "len", "contains", "element", "value", "values", "JS_HOOK", "add", "msg", "INIT_FLAG", "STATE_PREFIX", "_verifyElementExists", "element", "baseClass", "msg", "_verifyClassExists", "dom", "checkDom", "setInitFlag", "contains", "add", "instantiateAll", "selector", "Constructor", "scope", "config", "elements", "insts", "inst", "i", "len", "checkBehaviorDom", "element", "behaviorDataAttr", "dom", "contains", "selector", "JS_HOOK", "msg", "_toString", "isArray", "value", "_toString", "BASE_CLASS", "BEHAVIOR_PREFIX", "SEL_PREFIX", "JS_HOOK", "FlyoutMenu", "element", "autoHideContent", "_dom", "checkBehaviorDom", "_triggerDoms", "_findTriggers", "_contentDom", "_state", "COLLAPSED", "COLLAPSING", "EXPANDING", "EXPANDED", "_transition", "_expandTransitionMethod", "_collapseTransitionMethod", "_collapseEndBinded", "_collapseEnd", "_expandEndBinded", "_expandEnd", "_data", "_suspended", "_touchTriggered", "triggersList", "triggers", "trigger", "triggerParent", "isSubTrigger", "i", "init", "isExpanded", "triggerDom", "_setAriaAttr", "_handleTriggerClicked", "_handleTouchStart", "_handleTriggerOver", "_handleTriggerOut", "resume", "type", "elem", "value", "strValue", "event", "expand", "hasTransition", "BaseTransition", "collapse", "len", "setTransition", "transition", "collapseMethod", "expandMethod", "clearTransition", "UNDEFINED", "getDom", "suspend", "setData", "data", "eventObserver", "EventObserver", "CLASSES", "AlphaTransition", "element", "eventObserver", "EventObserver", "_baseTransition", "BaseTransition", "init", "initialClass", "fadeIn", "fadeOut", "BaseTransition", "element", "classes", "child", "_classes", "_dom", "_child", "_lastClass", "_transitionEndEvent", "_transitionCompleteBinded", "_isAnimated", "_isAnimating", "_isFlushed", "_addEventListener", "_removeEventListener", "_transitionComplete", "evt", "_flush", "prop", "halt", "remove", "animateOn", "animateOff", "_getTransitionEndEvent", "elem", "msg", "transition", "transitions", "transitionEvent", "setElement", "targetElement", "init", "initialClass", "applyClass", "className", "CLASSES", "MaxHeightTransition", "element", "eventObserver", "EventObserver", "_baseTransition", "BaseTransition", "_previousHeight", "refresh", "newHeight", "_pageLoaded", "init", "initialClass", "maxHeightDefault", "maxHeightSummary", "maxHeightZero", "remove", "CLASSES", "MoveTransition", "element", "eventObserver", "EventObserver", "_baseTransition", "BaseTransition", "init", "initialClass", "moveToOrigin", "_moveLeft", "count", "moveClasses", "moveRight", "moveUp", "BASE_CLASS", "Expandable", "element", "_dom", "checkDom", "_targetDom", "_contentDom", "_labelDom", "_transition", "_flyout", "init", "setInitFlag", "isExpanded", "add", "initialClass", "MaxHeightTransition", "FlyoutMenu", "getLabelText", "eventObserver", "EventObserver", "scope", "instantiateAll", "BASE_CLASS", "ExpandableGroup", "element", "_dom", "checkDom", "_isAccordion", "_expandables", "_lastExpanded", "_handleExpandBegin", "evt", "target", "init", "expandables", "setInitFlag", "expandable", "scope", "expandableGroupDom", "instantiateAll", "Expandable", "vars_breakpoints_default", "_getBodyBaseFontSize", "fontSize", "_inBreakpointRange", "breakpointRange", "width", "breakpointRangeMin", "breakpointRangeMax", "min", "max", "getBreakpointState", "breakpointState", "rangeKey", "vars_breakpoints_default", "MOBILE", "TABLET", "DESKTOP", "viewportIsIn", "breakpointGroup", "response", "currentBreakpoint", "BASE_CLASS", "Summary", "element", "_dom", "checkDom", "_hasMobileModifier", "_contentDom", "_btnDom", "_transition", "_flyout", "_suspended", "init", "setInitFlag", "_shouldSuspend", "add", "_pageLoadHandler", "FlyoutMenu", "MaxHeightTransition", "_triggerClickHandler", "_resizeHandler", "_focusInHandler", "_contentClicked", "evt", "_suspend", "_resume", "viewportIsIn", "MOBILE", "_expandEndHandler", "_hideButton", "_showButton", "eventObserver", "EventObserver", "scope", "instantiateAll", "BASE_CLASS", "SummaryMinimal", "element", "_dom", "checkDom", "_contentDom", "_btnDom", "_transition", "_flyout", "init", "setInitFlag", "add", "_pageLoadHandler", "FlyoutMenu", "MaxHeightTransition", "_focusInHandler", "_contentClicked", "evt", "eventObserver", "EventObserver", "scope", "instantiateAll"]
}
