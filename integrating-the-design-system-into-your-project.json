{"type":"PR","pr":{"number":331,"head":"3835b74f8be1dc9be15239b34d189ea5a10c8d04"},"user":"Catherine Farman","status":"draft","branch":"cms/integrating-the-design-system-into-your-project","collection":"getting-started","commitMessage":"Create \"integrating-the-design-system-into-your-project\" page","title":"Integrating the Design System into your project","description":"\nThe Design System provides a set of modular HTML, CSS, and JavaScript patterns that can be used both collectively and individually. There are several ways to integrate it into your project:\n\n1. [Installing a single component with npm or yarn](#installing-a-single-component-with-npm-or-yarn)\n1. [Using the generator](#using-the-generator)\n1. [Using Less](#using-less)\n1. [Downloading the compiled CSS](#downloading-the-compiled-css)\n\nOur recommended workflow if you are starting a new codebase is to use the generator to scaffold out a new Design System project. This allows you to pick and choose your modules as well as providing a solid front end build process.\n\n## Installing a single component with npm or yarn\n\nJust want one or two CF components and not the entire framework?\nSimply install and `@import` only the components you need.\n\n### Install with yarn or npm\nPick one:\n```sh\nTBA\n```\n```sh\nnpm install cf-buttons cf-icons\n```\n\n### Import CSS\n```css\n@import (less) \"node_modules/cf-buttons/src/cf-buttons.less\";\n@import (less) \"node_modules/cf-icons/src/cf-icons.less\";\n\n/* the rest of your stylesheet… */\n```\n\n### Import JavaScript\n```\nTBA\n```\n\n## Using the generator\n\nTo use the generator, you will need [Node.js](http://nodejs.org/),\n[Yeoman](http://yeoman.io/), and [Gulp](http://gulpjs.com/).\n\n### Installing dependencies\n\n[Node.js](http://nodejs.org/) can be downloaded and installed directly from the Node website, or by using a package manager for your system. At the CFPB we use Homebrew. To install the dependencies:\n\n```sh\nbrew install node  # if installing node with Homebrew\nnpm install --global gulp yo generator-cf\n```\n\n### Scaffolding out a project\n\nTo create a new project, create a directory, cd into that directory, and run the `yo cf` command:\n\n```sh\nmkdir my-awesome-project\ncd my-awesome-project\nyo cf\n```\n\nThe generator will prompt you to complete information about the project and choose the Design System modules you would like to use.\n\n### Navigating the project folder\n\nOnce the generator has finished you'll have a folder full of files and folders.\nHere's a quick guide on working with these files:\n\n- Run `npm run build` to process the files in `src` and output them to `dist`.\n- To view your site, go to the dist directory and start a local server: `cd dist && python -m SimpleHTTPServer`. You can now navigate to `localhost:8000` in your web browser.\n- Edit files within the `src` directory and re-run `npm run build` to view changes.\n\n#### Editing the Less and JS\n\nThe generator has created a starter Less file at `src/static/css/main.less`.\nThis file includes all of the necessary imports needed for Capital Framework.\nThere is also a starter JavaScript file at `src/static/js/main.js`.\nBoth `main.less` and `main.js` are already wired into `Gruntfile.js` (or `gulp/tasks/`\nif you selected gulp) so compiling is as easy as running `npm run build`. It also\ncopies files from `src` into `dist`, which will update what you see at `localhost:8000/`.\n\n### Theming / Customizing\n\nYou can override component UI colors within `src/static/css/cf-theme-overrides.less`.\nThis is already set up for you and gets imported by `main.less`.\nIf you would like to use your own color palette simply replace the contents of\n`brand-palette.less` with your own color variables,\nthen update `cf-theme-overrides.less` by overriding each UI color variable\nwith a color from `brand-palette.less` or any color of your choosing.\n\nThe same applies when you need to add custom styles to your project.\nYou can add any custom `.less` files to your project that you may need,\njust remember to import them in `main.less` using the correct path.\n\n## Using Less\n\nIf you don't want to use the generator,\nyou can just download the source files and import them into your project.\n\n> NOTE: Be sure to run the Less files through\n  [Autoprefixer](https://github.com/postcss/autoprefixer),\n  or your compiled CSS will\n  not work perfectly in older browsers.\n\nRun `npm install capital-framework`. This will download Capital Framework to your\nproject's `node_modules` directory. You can then import the framework into\nyour application's primary Less file:\n\n```css\n@import (less) \"node_modules/capital-framework/src/capital-framework.less\";\n\n/* the rest of your stylesheet… */\n```\n\nJust want one or two CF components and not the entire framework?\nSimply install and `@import` only the components you need.\n\n```sh\nnpm install cf-buttons cf-icons\n```\n\n```css\n@import (less) \"node_modules/cf-buttons/src/cf-buttons.less\";\n@import (less) \"node_modules/cf-icons/src/cf-icons.less\";\n\n/* the rest of your stylesheet… */\n```\n\n## Downloading the compiled CSS\n\nCapital Framework's compiled CSS can be <a class=\"cf-download\" href=\"https://npmcdn.com/capital-framework/dist/\">downloaded here</a>.\nDownload it and copy the files found in the `dist/` directory to your project.\nUse standard `<link>` and `<script>` tags.\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>My Awesome Project</title>\n    <link rel=\"stylesheet\" href=\"capital-framework.min.css\">\n</head>\n<body>\n    <!-- Your project's HTML goes here. -->\n    <script src=\"capital-framework.min.js\"></script>\n</body>\n</html>\n```\n","objects":{"entry":{"path":"docs/getting-started/integrating-the-design-system-into-your-project.md","sha":"db7398e2a0cd9d12adc8e3e02394f6b0156cc301"},"files":[]},"timeStamp":"2019-09-13T15:45:16.553Z"}